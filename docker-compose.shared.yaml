x-logging: &default-logging
  options:
    max-size: "50m"

networks:
  subtensor:
    name: subtensor
  kami:
    name: kami

services:
  btcli:
    container_name: btcli
    image: ghcr.io/tensorplex-labs/dojo:main
    volumes:
      - $BITTENSOR_DIR:/root/.bittensor
    networks:
      - subtensor
    command: ["btcli"]
    tty: true
    stdin_open: true

  redis:
    container_name: redis
    image: redis/redis-stack-server:7.4.0-v0
    env_file:
      - .env
    expose:
      - 6379
    ports:
      - 6579:6379
    command: >
      sh -c '
      if [ ! -z "$$REDIS_PASSWORD" ] && [ ! -z "$$REDIS_USERNAME" ]; then
        redis-stack-server --requirepass $$REDIS_PASSWORD &
        sleep 2
        redis-cli -a $$REDIS_PASSWORD ACL SETUSER $$REDIS_USERNAME on \>$$REDIS_PASSWORD allcommands allkeys
        wait
      else
        redis-stack-server;
      fi'
    healthcheck:
      test: >
        sh -c '
        if [ ! -z "$$REDIS_PASSWORD" ]; then
          redis-cli -a $$REDIS_PASSWORD ping;
        else
          redis-cli ping;
        fi'
      interval: 5s
      timeout: 5s
      retries: 5
    logging: *default-logging

  postgres:
    container_name: postgres
    image: postgres:15.7
    env_file:
      - .env
    command: >
      bash -c "
        export POSTGRES_USER=$${DB_USERNAME}
        export POSTGRES_PASSWORD=$${DB_PASSWORD}
        export POSTGRES_DB=$${DB_NAME}
        docker-entrypoint.sh postgres
      "
    expose:
      - 5432
    ports:
      - 5532:5432
    healthcheck:
      test:
        # looks strange, but double $ (i.e. $$) for variable substitution
        ["CMD-SHELL", "pg_isready -h postgres -U $${DB_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging: *default-logging

  kami:
    container_name: kami
    image: ghcr.io/tensorplex-labs/kami:main
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    env_file:
      - .env
    expose:
      - $KAMI_PORT
    logging: *default-logging
    volumes:
      - ${BITTENSOR_DIR}:${BITTENSOR_DIR}
    networks:
      - subtensor
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${KAMI_HOST}:${KAMI_PORT}/chain/latest-block"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 50s

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_DEBUG=true
      - WATCHTOWER_POLL_INTERVAL=600
      - WATCHTOWER_LABEL_ENABLE=true
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
